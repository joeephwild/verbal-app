import { HardhatNetworkAccountsConfig, HardhatNetworkHDAccountsConfig, HardhatRuntimeEnvironment, HttpNetworkAccountsConfig, HttpNetworkConfig, NetworkConfig, Network, NetworksConfig } from 'hardhat/types';
import { Provider, Wallet } from 'zksync-ethers';
import { ethers } from 'ethers';
import { FactoryOptions, ZkSyncArtifact } from './types';
export declare function isHardhatNetworkHDAccountsConfig(object: any): object is HardhatNetworkHDAccountsConfig;
export declare function isHardhatNetworkAccountsConfigStrings(object: any): object is string[];
export declare function isString(object: any): object is string;
export declare function isNumber(object: any): object is number;
export declare function getWalletsFromAccount(hre: HardhatRuntimeEnvironment, accounts: HardhatNetworkAccountsConfig | HttpNetworkAccountsConfig): Promise<Wallet[]>;
export declare function isFactoryOptions(walletOrOptions?: Wallet | FactoryOptions): walletOrOptions is FactoryOptions;
export declare function isArtifact(artifact: any): artifact is ZkSyncArtifact;
export declare function createProviders(networks: NetworksConfig, network: Network): {
    ethWeb3Provider: ethers.Provider;
    zkWeb3Provider: Provider;
};
export declare function isHttpNetworkConfig(networkConfig: NetworkConfig): networkConfig is HttpNetworkConfig;
export declare function isValidEthNetworkURL(string: string): boolean;
//# sourceMappingURL=utils.d.ts.map