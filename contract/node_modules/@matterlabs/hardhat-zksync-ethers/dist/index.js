"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const config_1 = require("hardhat/config");
const plugins_1 = require("hardhat/plugins");
require("./type-extensions");
const helpers_1 = require("./helpers");
const utils_1 = require("./utils");
(0, config_1.extendEnvironment)((hre) => {
    hre.zksyncEthers = (0, plugins_1.lazyObject)(() => {
        const { zksyncEthers } = require('zksync-ethers');
        const { ethWeb3Provider, zkWeb3Provider } = (0, utils_1.createProviders)(hre.config.networks, hre.network);
        return {
            ...zksyncEthers,
            providerL1: ethWeb3Provider,
            providerL2: zkWeb3Provider,
            getWallet: (privateKeyOrIndex) => (0, helpers_1.getWallet)(hre, privateKeyOrIndex),
            getWallets: () => (0, helpers_1.getWallets)(hre),
            getImpersonatedSigner: (address) => (0, helpers_1.getImpersonatedSigner)(hre, address),
            getContractFactory: helpers_1.getContractFactory.bind(null, hre),
            getContractFactoryFromArtifact: (artifact, walletOrOptions, deploymentType) => (0, helpers_1.getContractFactoryFromArtifact)(hre, artifact, walletOrOptions, deploymentType),
            getContractAt: (nameOrAbi, address, wallet) => (0, helpers_1.getContractAt)(hre, nameOrAbi, address, wallet),
            getContractAtFromArtifact: (artifact, address, wallet) => (0, helpers_1.getContractAtFromArtifact)(hre, artifact, address, wallet),
            extractFactoryDeps: (artifact) => (0, helpers_1.extractFactoryDeps)(hre, artifact),
            loadArtifact: (name) => (0, helpers_1.loadArtifact)(hre, name),
            deployContract: (artifact, constructorArguments, wallet, overrides, additionalFactoryDeps) => (0, helpers_1.deployContract)(hre, artifact, constructorArguments, wallet, overrides, additionalFactoryDeps),
        };
    });
});
//# sourceMappingURL=index.js.map