import { HardhatRuntimeEnvironment, SolcUserConfig } from 'hardhat/types';
import { VerificationStatusResponse } from './zksync-block-explorer/verification-status-response';
import { SolcConfigData } from './config-normalizer';
export declare function handleAxiosError(error: any): never;
export declare function delay(ms: number): Promise<unknown>;
export declare function encodeArguments(abi: any, constructorArgs: any[]): Promise<string>;
export declare function nextAttemptDelay(currentAttempt: number, baseDelay: number, baseNumberOfAttempts: number): number;
export declare function executeVeificationWithRetry(requestId: number, verifyURL: string, maxRetries?: number, baseRetries?: number, baseDelayInMs?: number): Promise<VerificationStatusResponse | undefined>;
export declare function retrieveContractBytecode(address: string, hre: HardhatRuntimeEnvironment): Promise<string>;
export declare function removeMultipleSubstringOccurrences(inputString: string, stringToRemove: string): string;
export declare function parseWrongConstructorArgumentsError(string: string): string;
export declare function extractModule(constructorArgsModulePath: string): Promise<any>;
export declare function getZkVmNormalizedVersion(solcVersion: string, zkVmSolcVersion: string): string;
export declare function normalizeCompilerVersions(solcConfigData: SolcConfigData, zkSolcConfig: any, latestEraVersion: string, userConfigCompilers: SolcUserConfig[] | Map<string, SolcUserConfig>): string | undefined;
export declare function extractQueryParams(url: string): [string, {
    [k: string]: string;
}];
//# sourceMappingURL=utils.d.ts.map