import { HardhatRuntimeEnvironment, RunSuperFunction, TaskArguments } from 'hardhat/types';
import { Contract } from 'zksync-ethers';
import { DeploymentType } from 'zksync-ethers/build/types';
export declare function deployContractAndVerify(hre: HardhatRuntimeEnvironment, runSuper: RunSuperFunction<TaskArguments>, taskArgs: {
    contractName: string;
    constructorArgsParams: any[];
    constructorArgs?: string;
    deploymentType?: string;
    noCompile?: boolean;
    verify?: boolean;
}): Promise<Contract>;
export declare function deployBeaconAndVerify(hre: HardhatRuntimeEnvironment, runSuper: RunSuperFunction<TaskArguments>, taskArgs: {
    contractName: string;
    constructorArgsParams: any[];
    constructorArgs?: string;
    initializer?: string;
    deploymentType?: DeploymentType;
    noCompile?: boolean;
    verify?: boolean;
}): Promise<{
    proxy: Contract;
    beacon: Contract;
}>;
export declare function deployProxyAndVerify(hre: HardhatRuntimeEnvironment, runSuper: RunSuperFunction<TaskArguments>, taskArgs: {
    contractName: string;
    constructorArgsParams: any[];
    constructorArgs?: string;
    initializer?: string;
    deploymentType?: DeploymentType;
    noCompile?: boolean;
    verify?: boolean;
}): Promise<Contract>;
export declare function upgradeBeaconAndVerify(hre: HardhatRuntimeEnvironment, runSuper: RunSuperFunction<TaskArguments>, taskArgs: {
    contractName: string;
    beaconAddress: string;
    deploymentType?: DeploymentType;
    noCompile?: boolean;
    verify?: boolean;
}): Promise<Contract>;
export declare function upgradeProxyAndVerify(hre: HardhatRuntimeEnvironment, runSuper: RunSuperFunction<TaskArguments>, taskArgs: {
    contractName: string;
    proxyAddress: string;
    deploymentType?: DeploymentType;
    noCompile?: boolean;
    verify?: boolean;
}): Promise<Contract>;
//# sourceMappingURL=plugin.d.ts.map