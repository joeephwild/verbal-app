"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.fullVerifyBeaconProxy = exports.fullVerifyBeacon = void 0;
const upgrades_core_1 = require("@openzeppelin/upgrades-core");
const zksync_ethers_1 = require("zksync-ethers");
const chalk_1 = __importDefault(require("chalk"));
const constants_1 = require("../constants");
const verify_proxy_1 = require("./verify-proxy");
const verify_impl_1 = require("./verify-impl");
async function fullVerifyBeacon(hre, beaconAddress, hardhatVerify, runSuper, noCompile = false, quiet = false) {
    const networkConfig = hre.network.config;
    const provider = new zksync_ethers_1.Provider(networkConfig.url);
    const implAddress = await (0, upgrades_core_1.getImplementationAddressFromBeacon)(provider, beaconAddress);
    await (0, verify_impl_1.verifyImplementation)(hardhatVerify, implAddress);
    await verifyBeacon();
    async function verifyBeacon() {
        if (!quiet) {
            console.info(chalk_1.default.cyan(`Verifying beacon: ${beaconAddress}`));
        }
        await (0, verify_proxy_1.verifyWithArtifact)(hre, beaconAddress, [constants_1.verifiableContracts.upgradeableBeacon], runSuper, noCompile);
    }
}
exports.fullVerifyBeacon = fullVerifyBeacon;
async function fullVerifyBeaconProxy(hre, proxyAddress, hardhatVerify, runSuper, noCompile = false, quiet = false) {
    const networkConfig = hre.network.config;
    const provider = new zksync_ethers_1.Provider(networkConfig.url);
    const beaconAddress = await (0, upgrades_core_1.getBeaconAddress)(provider, proxyAddress);
    await fullVerifyBeacon(hre, beaconAddress, hardhatVerify, runSuper, noCompile);
    await verifyBeaconProxy();
    async function verifyBeaconProxy() {
        if (!quiet) {
            console.info(chalk_1.default.cyan(`Verifying beacon proxy: ${proxyAddress}`));
        }
        await (0, verify_proxy_1.verifyWithArtifact)(hre, proxyAddress, [constants_1.verifiableContracts.beaconProxy], runSuper, noCompile);
    }
}
exports.fullVerifyBeaconProxy = fullVerifyBeaconProxy;
//# sourceMappingURL=verify-beacon.js.map