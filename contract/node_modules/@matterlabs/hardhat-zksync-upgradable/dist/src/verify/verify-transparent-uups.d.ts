import { HardhatRuntimeEnvironment, RunSuperFunction } from 'hardhat/types';
/**
 * Fully verifies all contracts related to the given transparent or UUPS proxy address: implementation, admin (if any), and proxy.
 *
 * This function will determine whether the address is a transparent or UUPS proxy based on whether its creation bytecode matches with
 * TransparentUpgradeableProxy or ERC1967Proxy.
 *
 * Note: this function does not use the admin slot to determine whether the proxy is transparent or UUPS, but will always verify
 * the admin address as long as the admin storage slot has an address.
 *
 * @param hre The hardhat runtime environment
 * @param proxyAddress The transparent or UUPS proxy address
 * @param hardhatVerify A function that invokes the verify plugin's verify command
 * @param runSuper A function that invokes the verify plugin's verify command
 */
export declare function fullVerifyTransparentOrUUPS(hre: HardhatRuntimeEnvironment, proxyAddress: any, hardhatVerify: (address: string) => Promise<any>, runSuper: RunSuperFunction<any>, noCompile?: boolean, quiet?: boolean): Promise<void>;
//# sourceMappingURL=verify-transparent-uups.d.ts.map