import { Deployment, DeployOpts, Version } from '@openzeppelin/upgrades-core';
import * as zk from 'zksync-ethers';
import { ImplDeployment } from './manifest';
export interface ManifestField<T> {
    get(): T | undefined;
    set(value: T | undefined): void;
    merge?(value: T | undefined): void;
}
export declare function deleteDeployment(deployment: ManifestField<Deployment>): void;
export declare function fetchOrDeploy(version: Version, provider: zk.Provider, deploy: () => Promise<ImplDeployment>, opts?: DeployOpts, merge?: boolean): Promise<string>;
export declare function fetchOrDeployGetDeployment<T extends ImplDeployment>(version: Version, provider: zk.Provider, deploy: () => Promise<T>, opts?: DeployOpts, merge?: boolean): Promise<T | Deployment>;
export declare function mergeAddresses(existing: ImplDeployment, value: ImplDeployment): {
    address: string;
    allAddresses: string[];
};
export declare function fetchOrDeployAdmin(provider: zk.Provider, deploy: () => Promise<Deployment>, opts?: DeployOpts): Promise<string>;
export declare function isDevelopmentNetwork(provider: zk.Provider): Promise<boolean>;
//# sourceMappingURL=impl-store.d.ts.map