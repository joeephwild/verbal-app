import { StorageLayout, ValidationDataCurrent, Version } from '@openzeppelin/upgrades-core';
import * as zk from 'zksync-ethers';
import type { HardhatRuntimeEnvironment } from 'hardhat/types';
import { TransactionResponse } from 'zksync-ethers/src/types';
import { DeployProxyOptions, UpgradeOptions } from '../utils/options';
export interface DeployData {
    provider: zk.Provider;
    validations: ValidationDataCurrent;
    unlinkedBytecode: string;
    encodedArgs: string;
    version: Version;
    layout: StorageLayout;
    fullOpts: Required<UpgradeOptions>;
}
export declare function getDeployData(hre: HardhatRuntimeEnvironment, contractFactory: zk.ContractFactory, opts: UpgradeOptions): Promise<DeployData>;
export declare function deployProxyImpl(hre: HardhatRuntimeEnvironment, contractFactory: zk.ContractFactory, opts: DeployProxyOptions, proxyAddress?: string): Promise<any>;
interface DeployedBeaconImpl {
    impl: string;
    txResponse?: TransactionResponse;
}
export declare function deployBeaconImpl(hre: HardhatRuntimeEnvironment, factory: zk.ContractFactory, opts: UpgradeOptions, beaconAddress?: string): Promise<DeployedBeaconImpl>;
export {};
//# sourceMappingURL=deploy-impl.d.ts.map