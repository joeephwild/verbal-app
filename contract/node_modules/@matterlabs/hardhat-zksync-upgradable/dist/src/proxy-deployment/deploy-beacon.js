"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.makeDeployBeacon = void 0;
const zk = __importStar(require("zksync-ethers"));
const chalk_1 = __importDefault(require("chalk"));
const assert_1 = __importDefault(require("assert"));
const path_1 = __importDefault(require("path"));
const constants_1 = require("../constants");
const utils_general_1 = require("../utils/utils-general");
const deploy_impl_1 = require("./deploy-impl");
const deploy_1 = require("./deploy");
function makeDeployBeacon(hre) {
    return async function deployBeacon(wallet, artifact, opts = {}, quiet = false) {
        const beaconImplFactory = new zk.ContractFactory(artifact.abi, artifact.bytecode, wallet, opts.deploymentType);
        opts.provider = wallet.provider;
        opts.factoryDeps = await (0, utils_general_1.extractFactoryDeps)(hre, artifact);
        const { impl } = await (0, deploy_impl_1.deployBeaconImpl)(hre, beaconImplFactory, opts);
        if (!quiet) {
            console.info(chalk_1.default.green('Beacon impl deployed at', impl));
        }
        const upgradableBeaconPath = (await hre.artifacts.getArtifactPaths()).find((x) => x.includes(path_1.default.sep + constants_1.UPGRADABLE_BEACON_JSON));
        (0, assert_1.default)(upgradableBeaconPath, 'Upgradable beacon artifact not found');
        const upgradeableBeaconContract = await Promise.resolve(`${upgradableBeaconPath}`).then(s => __importStar(require(s)));
        const upgradeableBeaconFactory = new zk.ContractFactory(upgradeableBeaconContract.abi, upgradeableBeaconContract.bytecode, wallet);
        const beaconDeployment = await (0, deploy_1.deploy)(upgradeableBeaconFactory, impl);
        if (!quiet) {
            console.info(chalk_1.default.green('Beacon deployed at: ', beaconDeployment.address));
        }
        const beaconContract = upgradeableBeaconFactory.attach(beaconDeployment.address);
        // @ts-ignore Won't be readonly because beaconContract was created through attach.
        beaconContract.deployTransaction = beaconDeployment.deployTransaction;
        return beaconContract;
    };
}
exports.makeDeployBeacon = makeDeployBeacon;
//# sourceMappingURL=deploy-beacon.js.map