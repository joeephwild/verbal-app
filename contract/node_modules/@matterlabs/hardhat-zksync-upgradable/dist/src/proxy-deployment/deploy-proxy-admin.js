"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAdminFactory = exports.getAdminArtifact = exports.makeDeployProxyAdmin = void 0;
const zk = __importStar(require("zksync-ethers"));
const path_1 = __importDefault(require("path"));
const assert_1 = __importDefault(require("assert"));
const constants_1 = require("../constants");
const impl_store_1 = require("../core/impl-store");
const deploy_1 = require("./deploy");
function makeDeployProxyAdmin(hre) {
    return async function deployProxyAdmin(wallet, opts = {}) {
        const adminFactory = await getAdminFactory(hre, wallet);
        return await (0, impl_store_1.fetchOrDeployAdmin)(wallet.provider, () => (0, deploy_1.deploy)(adminFactory), opts);
    };
}
exports.makeDeployProxyAdmin = makeDeployProxyAdmin;
async function getAdminArtifact(hre) {
    const proxyAdminPath = (await hre.artifacts.getArtifactPaths()).find((x) => x.includes(path_1.default.sep + constants_1.PROXY_ADMIN_JSON));
    (0, assert_1.default)(proxyAdminPath, 'Proxy admin artifact not found');
    return await Promise.resolve(`${proxyAdminPath}`).then(s => __importStar(require(s)));
}
exports.getAdminArtifact = getAdminArtifact;
async function getAdminFactory(hre, wallet) {
    const proxyAdminContract = await getAdminArtifact(hre);
    return new zk.ContractFactory(proxyAdminContract.abi, proxyAdminContract.bytecode, wallet);
}
exports.getAdminFactory = getAdminFactory;
//# sourceMappingURL=deploy-proxy-admin.js.map